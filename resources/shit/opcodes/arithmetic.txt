pub use crate::constants::*;
pub use crate::cpu::common::*;
use crate::cpu::{ProgramCounter, Registers};
use crate::Cpu;

/// This file contains all the functions necessary to support the Arithematic opcodes

impl Cpu {


    

    

    

    
    

    

    

    

    

    

    

    

    



    

    // Sets a register to the compliment of itself
    pub fn op_comp(&mut self, register: Registers) -> ProgramCounter {
        if let Registers::A = register {
            self.a = !self.a;
        }
        ProgramCounter::Next
    }

    // Sets the carry flag to the compliment of itself
    pub fn op_cmc(&mut self) -> ProgramCounter {
        if self.test_flag(FLAG_CARRY) {
            // Flag needs to be reset
            self.reset_flag(FLAG_CARRY);
        } else {
            // Flag needs to be set
            self.set_flag(FLAG_CARRY);
        }
        ProgramCounter::Next
    }

    // Sets the carry flag
    pub fn op_stc(&mut self) -> ProgramCounter {
        self.set_flag(FLAG_CARRY);
        ProgramCounter::Next
    }
}
